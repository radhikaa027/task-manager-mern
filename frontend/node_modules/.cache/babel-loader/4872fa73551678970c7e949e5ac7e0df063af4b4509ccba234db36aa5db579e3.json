{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\task-manager-mern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskList from \"./components/TaskList\";\nimport { fetchTasks, createTask, updateTask, deleteTask } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from backend\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const loadTasks = async () => {\n    try {\n      const response = await fetchTasks();\n      setTasks(response.data); // API call now utilizes `api.js`\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  const handleAddTask = async task => {\n    try {\n      const response = await createTask(task);\n      setTasks([...tasks, response.data]);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  const handleUpdateTask = async (taskId, updatedTaskData) => {\n    try {\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedTaskData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update task\");\n      }\n      const updatedTask = await response.json();\n\n      // Update the state with the modified task\n      setTasks(prevTasks => prevTasks.map(task => task._id === updatedTask._id ? updatedTask : task));\n      alert(\"Task updated successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to update task\");\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await deleteTask(id);\n      setTasks(tasks.filter(task => task._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      alert(\"Failed to delete task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: handleUpdateTask,\n      deleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","fetchTasks","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","loadTasks","response","data","error","console","handleAddTask","task","handleUpdateTask","taskId","updatedTaskData","fetch","method","headers","body","JSON","stringify","ok","Error","updatedTask","json","prevTasks","map","_id","alert","handleDeleteTask","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addTask","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/task-manager-mern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport { fetchTasks, createTask, updateTask, deleteTask } from \"./api\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks from backend\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  const loadTasks = async () => {\r\n    try {\r\n      const response = await fetchTasks();\r\n      setTasks(response.data); // API call now utilizes `api.js`\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddTask = async (task) => {\r\n    try {\r\n      const response = await createTask(task);\r\n      setTasks([...tasks, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async (taskId, updatedTaskData) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/tasks/${taskId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTaskData),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update task\");\r\n      }\r\n  \r\n      const updatedTask = await response.json();\r\n  \r\n      // Update the state with the modified task\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) =>\r\n          task._id === updatedTask._id ? updatedTask : task\r\n        )\r\n      );\r\n  \r\n      alert(\"Task updated successfully!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to update task\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      await deleteTask(id);\r\n      setTasks(tasks.filter((task) => task._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n      alert(\"Failed to delete task\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Task Manager</h1>\r\n      <TaskForm addTask={handleAddTask} />\r\n      <TaskList tasks={tasks} updateTask={handleUpdateTask} deleteTask={handleDeleteTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}