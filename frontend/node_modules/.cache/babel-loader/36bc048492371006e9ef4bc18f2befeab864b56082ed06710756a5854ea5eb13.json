{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\task-manager-mern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskItem from \"./components/TaskItem\";\nimport TaskForm from \"./components/TaskForm\";\nimport Pagination from \"./components/Pagination\";\nimport \"./styles.css\"; // Ensure you have added your styles here or link to Bootstrap in your `index.html`\nimport { createTask, updateTask, deleteTask } from \"./api\"; // Import createTask and other functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [filter, setFilter] = useState(\"all\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [tasksPerPage] = useState(5);\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await axios.get(\"/api/tasks\");\n      setTasks(response.data);\n    };\n    fetchTasks();\n  }, []);\n\n  // Add a task (using createTask from api.js)\n  const addTask = async newTask => {\n    try {\n      const response = await createTask(newTask); // Call createTask from api.js\n      setTasks([...tasks, response.data]);\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  // Update a task\n  const handleUpdateTask = async updatedTask => {\n    const response = await axios.put(`/api/tasks/${updatedTask._id}`, updatedTask);\n    setTasks(tasks.map(task => task._id === updatedTask._id ? response.data : task));\n    setCurrentTask(null); // Reset form after update\n  };\n\n  // Delete a task\n  const handleDeleteTask = async id => {\n    await deleteTask(id); // Call deleteTask from api.js\n    setTasks(tasks.filter(task => task._id !== id));\n  };\n\n  // Edit a task\n  const handleEditTask = task => {\n    setCurrentTask(task);\n  };\n\n  // Filter tasks (all, completed, incomplete)\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"completed\") return task.completed;\n    if (filter === \"incomplete\") return !task.completed;\n    return true;\n  });\n\n  // Get current tasks for the current page\n  const indexOfLastTask = currentPage * tasksPerPage;\n  const indexOfFirstTask = indexOfLastTask - tasksPerPage;\n  const currentTasks = filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\n\n  // Handle pagination change\n  const handlePageChange = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask // Use createTask instead of addTask\n      ,\n      updateTask: handleUpdateTask,\n      taskToEdit: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-sm ${filter === \"all\" ? \"btn-primary\" : \"btn-outline-primary\"} mx-1`,\n          onClick: () => setFilter(\"all\"),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-sm ${filter === \"completed\" ? \"btn-success\" : \"btn-outline-success\"} mx-1`,\n          onClick: () => setFilter(\"completed\"),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-sm ${filter === \"incomplete\" ? \"btn-warning\" : \"btn-outline-warning\"} mx-1`,\n          onClick: () => setFilter(\"incomplete\"),\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group mt-3\",\n      children: currentTasks.length > 0 ? currentTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onDelete: handleDeleteTask,\n        onEdit: handleEditTask\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-muted\",\n        children: \"No tasks available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), filteredTasks.length > tasksPerPage && /*#__PURE__*/_jsxDEV(Pagination, {\n      tasksPerPage: tasksPerPage,\n      totalTasks: filteredTasks.length,\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dYS5+gG1khNtHIu5U+D+QZvImOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskItem","TaskForm","Pagination","createTask","updateTask","deleteTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","currentTask","setCurrentTask","filter","setFilter","currentPage","setCurrentPage","tasksPerPage","fetchTasks","response","get","data","addTask","newTask","error","console","handleUpdateTask","updatedTask","put","_id","map","task","handleDeleteTask","id","handleEditTask","filteredTasks","completed","indexOfLastTask","indexOfFirstTask","currentTasks","slice","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","taskToEdit","onClick","length","onDelete","onEdit","totalTasks","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/task-manager-mern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TaskItem from \"./components/TaskItem\";\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport Pagination from \"./components/Pagination\";\r\nimport \"./styles.css\"; // Ensure you have added your styles here or link to Bootstrap in your `index.html`\r\nimport { createTask, updateTask, deleteTask } from \"./api\"; // Import createTask and other functions\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tasksPerPage] = useState(5);\r\n\r\n  // Fetch tasks from the backend\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const response = await axios.get(\"/api/tasks\");\r\n      setTasks(response.data);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Add a task (using createTask from api.js)\r\n  const addTask = async (newTask) => {\r\n    try {\r\n      const response = await createTask(newTask); // Call createTask from api.js\r\n      setTasks([...tasks, response.data]);\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n\r\n  // Update a task\r\n  const handleUpdateTask = async (updatedTask) => {\r\n    const response = await axios.put(`/api/tasks/${updatedTask._id}`, updatedTask);\r\n    setTasks(tasks.map((task) => (task._id === updatedTask._id ? response.data : task)));\r\n    setCurrentTask(null); // Reset form after update\r\n  };\r\n\r\n  // Delete a task\r\n  const handleDeleteTask = async (id) => {\r\n    await deleteTask(id); // Call deleteTask from api.js\r\n    setTasks(tasks.filter((task) => task._id !== id));\r\n  };\r\n\r\n  // Edit a task\r\n  const handleEditTask = (task) => {\r\n    setCurrentTask(task);\r\n  };\r\n\r\n  // Filter tasks (all, completed, incomplete)\r\n  const filteredTasks = tasks.filter((task) => {\r\n    if (filter === \"completed\") return task.completed;\r\n    if (filter === \"incomplete\") return !task.completed;\r\n    return true;\r\n  });\r\n\r\n  // Get current tasks for the current page\r\n  const indexOfLastTask = currentPage * tasksPerPage;\r\n  const indexOfFirstTask = indexOfLastTask - tasksPerPage;\r\n  const currentTasks = filteredTasks.slice(indexOfFirstTask, indexOfLastTask);\r\n\r\n  // Handle pagination change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <h1 className=\"text-center\">Task Manager</h1>\r\n\r\n      {/* Task Form */}\r\n      <TaskForm\r\n        addTask={addTask} // Use createTask instead of addTask\r\n        updateTask={handleUpdateTask}\r\n        taskToEdit={currentTask}\r\n      />\r\n\r\n      {/* Filters */}\r\n      <div className=\"d-flex justify-content-between align-items-center mt-4\">\r\n        <h5>Tasks</h5>\r\n        <div>\r\n          <button\r\n            className={`btn btn-sm ${filter === \"all\" ? \"btn-primary\" : \"btn-outline-primary\"} mx-1`}\r\n            onClick={() => setFilter(\"all\")}\r\n          >\r\n            All\r\n          </button>\r\n          <button\r\n            className={`btn btn-sm ${filter === \"completed\" ? \"btn-success\" : \"btn-outline-success\"} mx-1`}\r\n            onClick={() => setFilter(\"completed\")}\r\n          >\r\n            Completed\r\n          </button>\r\n          <button\r\n            className={`btn btn-sm ${filter === \"incomplete\" ? \"btn-warning\" : \"btn-outline-warning\"} mx-1`}\r\n            onClick={() => setFilter(\"incomplete\")}\r\n          >\r\n            Incomplete\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Task List */}\r\n      <div className=\"list-group mt-3\">\r\n        {currentTasks.length > 0 ? (\r\n          currentTasks.map((task) => (\r\n            <TaskItem\r\n              key={task._id}\r\n              task={task}\r\n              onDelete={handleDeleteTask}\r\n              onEdit={handleEditTask}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"text-center text-muted\">No tasks available.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {filteredTasks.length > tasksPerPage && (\r\n        <Pagination\r\n          tasksPerPage={tasksPerPage}\r\n          totalTasks={filteredTasks.length}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}