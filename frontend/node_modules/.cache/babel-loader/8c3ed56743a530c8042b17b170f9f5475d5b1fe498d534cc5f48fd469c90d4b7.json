{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\task-manager-mern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from backend\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"/tasks\");\n      const data = await response.json();\n      setTasks(data); // Update the state with the latest tasks from the server\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const newTask = await res.json();\n    setTasks([...tasks, newTask]);\n  };\n  const updateTask = async (id, updatedTask) => {\n    try {\n      const response = await fetch(`/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedTask) // Send updated task\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to update task\");\n      }\n      const updatedData = await response.json();\n      fetchTasks(); // Re-fetch tasks after update\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n      alert(\"Failed to update task\");\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      const response = await fetch(`/tasks/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        // Immediately remove the deleted task from the state\n        setTasks(tasks.filter(task => task._id !== id));\n      } else {\n        alert(\"Failed to delete task\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n      alert(\"Error deleting task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","response","fetch","data","json","error","console","addTask","task","res","method","headers","body","JSON","stringify","newTask","updateTask","id","updatedTask","ok","Error","updatedData","alert","deleteTask","filter","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/task-manager-mern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks from backend\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(\"/tasks\");\r\n      const data = await response.json();\r\n      setTasks(data);  // Update the state with the latest tasks from the server\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n  \r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(task),\r\n    });\r\n    const newTask = await res.json();\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  const updateTask = async (id, updatedTask) => {\r\n    try {\r\n      const response = await fetch(`/tasks/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(updatedTask), // Send updated task\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update task\");\r\n      }\r\n      \r\n      const updatedData = await response.json();\r\n      fetchTasks(); // Re-fetch tasks after update\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n      alert(\"Failed to update task\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const response = await fetch(`/tasks/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      \r\n      if (response.ok) {\r\n        // Immediately remove the deleted task from the state\r\n        setTasks(tasks.filter(task => task._id !== id));\r\n      } else {\r\n        alert(\"Failed to delete task\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n      alert(\"Error deleting task\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Task Manager</h1>\r\n      <TaskForm addTask={addTask} />\r\n      <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}